{
  "version": "1",
  "cognitoConfig": {
    "identityPoolName": "testAuthIdentityPool",
    "allowUnauthenticatedIdentities": true,
    "resourceNameTruncated": "dinewi33d490e9",
    "userPoolName": "DineWithMe",
    "autoVerifiedAttributes": [
      "email"
    ],
    "mfaConfiguration": "OFF",
    "mfaTypes": [
      "SMS Text Message"
    ],
    "smsAuthenticationMessage": "Your authentication code is {####}",
    "smsVerificationMessage": "Your verification code is {####}",
    "emailVerificationSubject": "Dine With Me | Email verification code",
    "emailVerificationMessage": "Dear Customer,\nThank you for creating an account with Dine With Me. We're excited to have you on board! To ensure the security of your account and complete the registration process, please verify your email address by entering the code below on our website:\nVerification Code: {####}\nThis code will expire in 24 hours for security reasons. If you don't complete the verification within this timeframe, you'll need to request a new code.\nIf you didn't create an account with us, please disregard this email.\nFor any questions or assistance, please don't hesitate to contact our support team at contact@dinewithme.io.\nWelcome to Dine With Me!",
    "defaultPasswordPolicy": false,
    "passwordPolicyMinLength": 8,
    "passwordPolicyCharacters": [
      "Requires Lowercase",
      "Requires Numbers",
      "Requires Uppercase"
    ],
    "requiredAttributes": [
      "email",
      "family_name",
      "given_name",
      "name",
      "phone_number",
      "preferred_username"
    ],
    "aliasAttributes": [],
    "userpoolClientGenerateSecret": false,
    "userpoolClientRefreshTokenValidity": 30,
    "userpoolClientWriteAttributes": [],
    "userpoolClientReadAttributes": [],
    "userpoolClientLambdaRole": "DineWi33d490e9_userpoolclient_lambda_role",
    "userpoolClientSetAttributes": false,
    "sharedId": "33d490e9",
    "resourceName": "DineWithMe",
    "authSelections": "identityPoolAndUserPool",
    "serviceName": "Cognito",
    "useDefault": "manual",
    "userPoolGroups": false,
    "userPoolGroupList": [],
    "adminQueries": false,
    "thirdPartyAuth": false,
    "authProviders": [],
    "usernameCaseSensitive": false,
    "useEnabledMfas": true,
    "authRoleArn": {
      "Fn::GetAtt": [
        "AuthRole",
        "Arn"
      ]
    },
    "unauthRoleArn": {
      "Fn::GetAtt": [
        "UnauthRole",
        "Arn"
      ]
    },
    "breakCircularDependency": true,
    "dependsOn": []
  }
}